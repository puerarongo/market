{"version":3,"file":"static/js/753.b7be95ea.chunk.js","mappings":"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","sources":["webpack://market/./src/components/form/Form.module.css?1d3b","services/validationSchema.ts","webpack://market/./src/components/form/googleButton/GoogleButton.module.css?9503","components/form/googleButton/GoogleButton.tsx","components/form/Form.tsx","components/login/Login.tsx","webpack://market/./src/components/registration/Registration.module.css?2a81"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Form_container__95w0O\",\"form\":\"Form_form__gjyi8\",\"label\":\"Form_label__2sM9O\",\"input\":\"Form_input__9y3wg\",\"input__errors\":\"Form_input__errors__rjp6K\",\"input__error\":\"Form_input__error__arTDk\",\"default__count\":\"Form_default__count__2CGuO\",\"error__count\":\"Form_error__count__JHsSp\",\"button\":\"Form_button__BDA4v\",\"auth__text\":\"Form_auth__text__vl+Fz\",\"auth__link\":\"Form_auth__link__STn2W\"};","import * as yup from \"yup\";\n\nconst validationSchema = yup.object().shape({\n  email: yup\n    .string()\n    .typeError(\"Will be a string\")\n    .email(\"You must enter the field in email format\")\n    .matches(\n      /^(?!-)\\S{2,}@\\S+(\\.\\w{2,})(?!-)$/,\n      \"You must enter the field in email format\"\n    )\n    .min(6, \"The field contains an error\")\n    .max(63, \"The field contains an error\")\n    .required(\"This field is required\"),\n  password: yup\n    .string()\n    .typeError(\"Will be a string\")\n    .min(6, \"Password must contain at least 6 characters\")\n    .max(30, \"Password must be less than 30 characters\")\n    .matches(\n      /^(?!-|\\.)[0-9a-zA-Z*!@#$%^&(){}[\\]:;<>,.?/~_+\\-=|\\\\]{5,30}$/,\n      \"The field contains an error\"\n    )\n    .required(\"This field is required\"),\n});\n\nexport default validationSchema;\n","// extracted by mini-css-extract-plugin\nexport default {\"hr\":\"GoogleButton_hr__Isubr\",\"google__text\":\"GoogleButton_google__text__M61N9\",\"button__google\":\"GoogleButton_button__google__yHWct\",\"svg__container\":\"GoogleButton_svg__container__sv3mL\",\"svg__google\":\"GoogleButton_svg__google__ZnH9j\",\"text__google\":\"GoogleButton_text__google__m67Fg\"};","import React from \"react\";\nimport styles from \"./GoogleButton.module.css\";\nimport svgPath from \"../../../services/svgPath\";\n\ninterface IGoogleButton {\n  googleFunction: Function;\n}\n\nconst GoogleButton: React.FC<IGoogleButton> = ({ googleFunction }) => {\n  return (\n    <>\n      <hr className={styles.hr} />\n      <p className={styles.google__text}>You can sign in with google login!</p>\n      <button\n        className={styles.button__google}\n        type=\"button\"\n        onClick={() => googleFunction()}\n      >\n        <span className={styles.svg__container}>\n          <svg className={styles.svg__google}>\n            <use href={svgPath.google + \"#google\"}></use>\n          </svg>\n        </span>\n        <p className={styles.text__google}>Connect Gmail</p>\n      </button>\n    </>\n  );\n};\n\nexport default GoogleButton;\n","import React from \"react\";\nimport styles from \"./Form.module.css\";\nimport { Formik } from \"formik\";\nimport validationSchema from \"../../services/validationSchema\";\nimport { auth } from \"../firebase\";\nimport { UserCredential } from \"firebase/auth\";\nimport { useDispatch } from \"react-redux\";\nimport GoogleButton from \"./googleButton/GoogleButton\";\nimport { Link } from \"react-router-dom\";\n\n// * Bootstrap\nimport Form from \"react-bootstrap/Form\";\nimport { Button } from \"react-bootstrap\";\n\n// * Firebase\nimport { getDoc, setDoc, doc } from \"firebase/firestore\";\nimport { db } from \"../firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userActions } from \"../../redux/slices/userSlice\";\nimport { GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport { personalActions } from \"../../redux/slices/personalSlice\";\nimport { Report } from \"notiflix/build/notiflix-report-aio\";\n\ninterface IFormAuth {\n  firebaseFunc: Function;\n  buttonName: String;\n  formType: String;\n}\n\nconst FormAuth: React.FC<IFormAuth> = ({\n  firebaseFunc,\n  buttonName,\n  formType,\n}) => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const googleHandler = async () => {\n    const googleProvider = new GoogleAuthProvider();\n    return signInWithPopup(auth, googleProvider).then(\n      async (userCredential: UserCredential) => {\n        const { user } = userCredential;\n\n        await getDoc(doc(db, \"users\", user.uid))\n          .then(async (data) => {\n            await setDoc(\n              doc(db, \"users\", user.uid),\n              {\n                uid: user.uid,\n                email: user.email,\n              },\n              { merge: true }\n            );\n            const { allProducts, allQuantity, allAmount }: any = data.data();\n\n            if (allProducts) {\n              dispatch(\n                personalActions.addBuy({\n                  allProducts,\n                  allQuantity,\n                  allAmount,\n                })\n              );\n            }\n          })\n          .catch((err: Error) => console.log(err));\n        dispatch(userActions.userAdd({ user: user.uid, email: user.email }));\n      }\n    );\n  };\n\n  return (\n    <div className={styles.container}>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { resetForm }) => {\n          const { email, password } = values;\n          firebaseFunc(auth, email, password)\n            .then(async (userCredential: UserCredential) => {\n              if (formType === \"registration\") {\n                const { user } = userCredential;\n                await setDoc(doc(db, \"users\", user.uid), {\n                  uid: user.uid,\n                  email,\n                  personal: {\n                    allProducts: [],\n                    allAmount: 0,\n                    allQuantity: 0,\n                  },\n                });\n              }\n              navigate(\"/personal\");\n              dispatch(\n                userActions.userAdd({\n                  user: userCredential.user.uid,\n                  email: userCredential.user.email,\n                })\n              );\n            })\n            .catch((error: Error) => {\n              resetForm();\n              if (formType === \"registration\") {\n                Report.failure(\n                  \"Registration Error\",\n                  \"The user with this email is already registered\",\n                  \"OK\"\n                );\n              } else {\n                Report.failure(\n                  \"Login Error\",\n                  \"This user is not registered\",\n                  \"OK\"\n                );\n              }\n            });\n          resetForm();\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleBlur,\n          handleChange,\n          handleSubmit,\n        }) => (\n          <Form className={styles.form} onSubmit={handleSubmit}>\n            <Form.Label className={styles.label}>\n              Email\n              <Form.Control\n                size=\"lg\"\n                className={\n                  errors.email && touched.email\n                    ? styles.input__error\n                    : styles.input\n                }\n                type=\"email\"\n                placeholder=\"email@a.com\"\n                name=\"email\"\n                value={values.email}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n              {errors.email && touched.email ? (\n                <p className={styles.error__count}>{`${errors.email}`}</p>\n              ) : (\n                <span className={styles.default__count}></span>\n              )}\n            </Form.Label>\n\n            <Form.Label className={styles.label}>\n              Password\n              <Form.Control\n                size=\"lg\"\n                className={\n                  errors.password && touched.password\n                    ? styles.input__error\n                    : styles.input\n                }\n                type=\"password\"\n                placeholder=\"password\"\n                name=\"password\"\n                value={values.password}\n                onBlur={handleBlur}\n                onChange={handleChange}\n              />\n              {errors.password && touched.password ? (\n                <p className={styles.error__count}>{`${errors.password}`}</p>\n              ) : (\n                <span className={styles.default__count}></span>\n              )}\n            </Form.Label>\n\n            <Button type=\"submit\" size=\"lg\" className={styles.button}>\n              {buttonName}\n            </Button>\n            {formType === \"login\" ? (\n              <>\n                <p className={styles.auth__text}>\n                  Don't have an account yet?\n                  <Link to=\"/registration\" className={styles.auth__link}>\n                    Register\n                  </Link>\n                </p>\n                <GoogleButton googleFunction={googleHandler} />\n              </>\n            ) : (\n              <p className={styles.auth__text}>\n                Are you already registered?\n                <Link to=\"/login\" className={styles.auth__link}>\n                  Return to login\n                </Link>\n              </p>\n            )}\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default FormAuth;\n","import React from \"react\";\nimport styles from \"../registration/Registration.module.css\";\nimport FormAuth from \"../form/Form\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\n\nconst Login: React.FC = () => {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>Login</h2>\n      <FormAuth\n        firebaseFunc={signInWithEmailAndPassword}\n        buttonName={\"Sign In\"}\n        formType={\"login\"}\n      />\n    </div>\n  );\n};\n\nexport default Login;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Registration_container__AaogK\",\"title\":\"Registration_title__otapX\"};"],"names":["yup","shape","email","typeError","matches","min","max","required","password","_ref","googleFunction","_jsxs","_Fragment","children","_jsx","className","styles","type","onClick","href","svgPath","firebaseFunc","buttonName","formType","navigate","useNavigate","dispatch","useDispatch","googleHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee3","googleProvider","wrap","_context3","prev","next","GoogleAuthProvider","abrupt","signInWithPopup","auth","then","_ref3","_callee2","userCredential","user","_context2","getDoc","doc","db","uid","_ref4","_callee","data","_data$data","allProducts","allQuantity","allAmount","_context","setDoc","merge","personalActions","stop","_x2","apply","arguments","catch","err","console","log","userActions","_x","Formik","initialValues","validationSchema","onSubmit","values","_ref5","resetForm","_ref6","_callee4","_context4","personal","_x3","error","Report","_ref7","errors","touched","handleBlur","handleChange","handleSubmit","Form","size","placeholder","name","value","onBlur","onChange","concat","Button","Link","to","GoogleButton","FormAuth","signInWithEmailAndPassword"],"sourceRoot":""}